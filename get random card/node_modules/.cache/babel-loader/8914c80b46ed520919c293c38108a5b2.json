{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Desktop\\\\PROJECTS\\\\counter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Board() {\n  const [arr, setarr] = useState(Array(9).fill(null));\n\n  const handleClick = index => {\n    if (arr[index]) return;\n    const squares = [...arr];\n    squares[index] = \"X\";\n    setarr(squares); //Computer is choosing a number\n\n    let num;\n\n    do {\n      num = Math.floor(Math.random() * 9);\n      console.log(\" NUM IS \", num);\n    } while (arr[num] && num != index);\n\n    console.log(\"number choosen by user is\", index);\n    console.log(\"number choosen by comp is\", num);\n    squares[num] = \"O\";\n    console.log(arr);\n    setarr(squares);\n  }; //  Each individual square\n\n\n  const renderSquare = i => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(i),\n    value: arr[i],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, arr[i]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (arr[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/DELL/Documents/Desktop/PROJECTS/counter/src/App.js"],"names":["React","useState","Board","arr","setarr","Array","fill","handleClick","index","squares","num","Math","floor","random","console","log","renderSquare","i","calculateWinner","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Board() {\n   const [arr, setarr] = useState(Array(9).fill(null));\n\n   const handleClick = (index) => {\n      if (arr[index]) return;\n      const squares = [...arr];\n      squares[index] = \"X\";\n      setarr(squares);\n\n      //Computer is choosing a number\n      let num;\n      do {\n         num = Math.floor(Math.random() * 9);\n         console.log(\" NUM IS \", num);\n      } while (arr[num] && num != index);\n      console.log(\"number choosen by user is\", index);\n      console.log(\"number choosen by comp is\", num);\n      squares[num] = \"O\";\n      console.log(arr);\n      setarr(squares);\n   };\n\n   //  Each individual square\n   const renderSquare = (i) => (\n      <button className='square' onClick={() => handleClick(i)} value={arr[i]}>\n         {arr[i]}\n      </button>\n   );\n\n   return (\n      <div>\n         <div className='board-row'>\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n         </div>\n         <div className='board-row'>\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n         </div>\n         <div className='board-row'>\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n         </div>\n      </div>\n   );\n}\n\n\n\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (arr[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}