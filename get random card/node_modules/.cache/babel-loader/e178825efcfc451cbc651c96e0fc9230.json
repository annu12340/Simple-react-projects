{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Desktop\\\\PROJECTS\\\\counter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nconst api = {\n  key: \"7d4ef5d23648c7c62acd3ccfa1a0a30b\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setquery] = useState('');\n  const [weather, setweather] = useState({});\n  const [value, setvalue] = useState(\"\");\n\n  function handleCopy(e) {\n    e.preventDefault();\n    setvalue(e.target.value);\n    console.log(\"sd\", e);\n  }\n\n  const search = e => {\n    if (e.key == \"Enter\") {\n      fetch(`${api.base}weather?q=`);\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: handleCopy,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, dateBuilder(new Date())), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, value));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DELL/Documents/Desktop/PROJECTS/counter/src/App.js"],"names":["React","useState","api","key","base","App","query","setquery","weather","setweather","value","setvalue","handleCopy","e","preventDefault","target","console","log","search","fetch","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAGA,WAASW,UAAT,CAAoBC,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,CAAlB;AACD;;AAGD,QAAMK,MAAM,GAACL,CAAC,IAAE;AACd,QAAGA,CAAC,CAACV,GAAF,IAAO,OAAV,EAAkB;AAChBgB,MAAAA,KAAK,CAAE,GAAEjB,GAAG,CAACE,IAAK,YAAb,CAAL;AACD;AACF,GAJD;;AAMA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA0C,IAAA,WAAW,EAAC,WAAtD;AAAkE,IAAA,QAAQ,EAAElB,UAA5E;AAAwF,IAAA,KAAK,EAAEF,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BU,WAAW,CAAC,IAAIY,IAAJ,EAAD,CAAtC,CALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,KAAL,CAPF,CADF;AAWD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst api = {\n  key: \"7d4ef5d23648c7c62acd3ccfa1a0a30b\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n\n  const [query, setquery] = useState('')\n  const [weather, setweather] = useState({})\n  const [value, setvalue] = useState(\"\");\n \n \n  function handleCopy(e) {\n    e.preventDefault();\n    setvalue(e.target.value);\n    console.log(\"sd\", e);\n  }\n\n\n  const search=e=>{\n    if(e.key==\"Enter\"){\n      fetch(`${api.base}weather?q=`)\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"search-box\">\n        <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" onChange={handleCopy} value={value} />\n      </div>\n\n      <div className=\"location\">{dateBuilder(new Date())}</div>\n\n      <h3>{value}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}