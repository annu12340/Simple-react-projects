{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Desktop\\\\PROJECTS\\\\counter\\\\src\\\\Deck.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport './Deck.css';\nimport axios from 'axios';\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck';\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCard = async () => {\n      let id = this.state.deck.deck_id;\n\n      try {\n        let cardUrl = `${API_BASE_URL}/${id}/draw/`;\n        let cardRes = await axios.get(cardUrl);\n\n        if (!cardRes.data.success) {\n          throw new Error(\"No more cards!\");\n        }\n\n        let card = cardRes.data.cards[0];\n        this.setState(st => ({\n          drawn: [...st.drawn, {\n            id: card.code,\n            image: card.image,\n            name: `${card.value} of ${card.suit}`\n          }]\n        }));\n      } catch (err) {\n        alert(err);\n      }\n    };\n\n    this.state = {\n      deck: null,\n      drawn: []\n    };\n  }\n\n  async componentDidMount() {\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle`);\n    this.setState({\n      deck: deck.data\n    });\n  }\n\n  render() {\n    const cards = this.state.drawn.map(card => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      name: card.name,\n      image: card.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Deck-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Card Dealer\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Deck-title subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"A React Demo\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-btn\",\n      onClick: this.getCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Get Card\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Deck-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, cards));\n  }\n\n}\n\nexport default Deck;","map":{"version":3,"sources":["C:/Users/DELL/Documents/Desktop/PROJECTS/counter/src/Deck.js"],"names":["React","Component","Card","axios","API_BASE_URL","Deck","constructor","props","getCard","id","state","deck","deck_id","cardUrl","cardRes","get","data","success","Error","card","cards","setState","st","drawn","code","image","name","value","suit","err","alert","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,qCAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,OAhBmB,GAgBT,YAAY;AAClB,UAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAzB;;AACA,UAAI;AACA,YAAIC,OAAO,GAAI,GAAET,YAAa,IAAGK,EAAG,QAApC;AACA,YAAIK,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUF,OAAV,CAApB;;AACA,YAAI,CAACC,OAAO,CAACE,IAAR,CAAaC,OAAlB,EAA2B;AACvB,gBAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACH;;AACD,YAAIC,IAAI,GAAGL,OAAO,CAACE,IAAR,CAAaI,KAAb,CAAmB,CAAnB,CAAX;AACA,aAAKC,QAAL,CAAcC,EAAE,KAAK;AACjBC,UAAAA,KAAK,EAAE,CACH,GAAGD,EAAE,CAACC,KADH,EAEH;AACId,YAAAA,EAAE,EAAEU,IAAI,CAACK,IADb;AAEIC,YAAAA,KAAK,EAAEN,IAAI,CAACM,KAFhB;AAGIC,YAAAA,IAAI,EAAG,GAAEP,IAAI,CAACQ,KAAM,OAAMR,IAAI,CAACS,IAAK;AAHxC,WAFG;AADU,SAAL,CAAhB;AAUH,OAjBD,CAkBA,OAAOC,GAAP,EAAY;AACRC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACH;AACJ,KAvCkB;;AAEf,SAAKnB,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETY,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAED,QAAMQ,iBAAN,GAA0B;AACtB,QAAIpB,IAAI,GAAG,MAAMR,KAAK,CAACY,GAAN,CAAW,GAAEX,YAAa,cAA1B,CAAjB;AACA,SAAKiB,QAAL,CAAc;AACVV,MAAAA,IAAI,EAAEA,IAAI,CAACK;AADD,KAAd;AAGH;;AA8BDgB,EAAAA,MAAM,GAAG;AACL,UAAMZ,KAAK,GAAG,KAAKV,KAAL,CAAWa,KAAX,CAAiBU,GAAjB,CAAqBd,IAAI,iBACnC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACV,EAAhB;AAAoB,MAAA,IAAI,EAAEU,IAAI,CAACO,IAA/B;AAAqC,MAAA,KAAK,EAAEP,IAAI,CAACM,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CAAd;AAGA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKjB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKY,KADL,CAJJ,CADJ;AAUH;;AA1DwB;;AA6D7B,eAAef,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from './Card'\r\nimport './Deck.css'\r\nimport axios from 'axios'\r\n\r\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck';\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deck: null,\r\n            drawn: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let deck = await axios.get(`${API_BASE_URL}/new/shuffle`);\r\n        this.setState({\r\n            deck: deck.data\r\n        })\r\n    }\r\n\r\n\r\n    getCard = async () => {\r\n        let id = this.state.deck.deck_id;\r\n        try {\r\n            let cardUrl = `${API_BASE_URL}/${id}/draw/`;\r\n            let cardRes = await axios.get(cardUrl);\r\n            if (!cardRes.data.success) {\r\n                throw new Error(\"No more cards!\")\r\n            }\r\n            let card = cardRes.data.cards[0];\r\n            this.setState(st => ({\r\n                drawn: [\r\n                    ...st.drawn,\r\n                    {\r\n                        id: card.code,\r\n                        image: card.image,\r\n                        name: `${card.value} of ${card.suit}`\r\n                    }\r\n                ]\r\n            }))\r\n        }\r\n        catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const cards = this.state.drawn.map(card => (\r\n            <Card key={card.id} name={card.name} image={card.image} />\r\n        ));\r\n        return (\r\n            <div>\r\n                <h1 className='Deck-title'>Card Dealer</h1>\r\n                <h2 className='Deck-title subtitle'>A React Demo</h2>\r\n                <button className='Deck-btn' onClick={this.getCard}>Get Card</button>\r\n                <div className=\"Deck-cards\">\r\n                    {cards}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck"]},"metadata":{},"sourceType":"module"}