{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Desktop\\\\PROJECTS\\\\counter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Board() {\n  const [arr, setarr] = useState(Array(9).fill(null));\n  const [winner, setwinner] = useState(\"\"); //  Each individual square\n\n  const renderSquare = i => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(i),\n    value: arr[i],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, arr[i]);\n\n  const handleClick = index => {\n    if (arr[index]) return;\n    const squares = [...arr];\n    squares[index] = \"X\";\n    setarr(squares);\n    calculateWinner(arr); //Computer is choosing a number\n\n    let num;\n\n    do {\n      num = Math.floor(Math.random() * 9);\n      console.log(\" NUM IS \", num);\n    } while (arr[num] && num != index);\n\n    console.log(\"number choosen by user is\", index);\n    console.log(\"number choosen by comp is\", num);\n    squares[num] = \"O\";\n    console.log(arr);\n    setarr(squares);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, \"Tic Tac Toe\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, \"User vs computer\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8)), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"winner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, winner));\n\n  function calculateWinner(arr) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (arr[a] && arr[a] === arr[b] && arr[a] === arr[c]) {\n        let x = `The winner is ${arr[a]}`;\n        setwinner(x);\n        console.log(x);\n        return arr[a];\n      }\n    }\n\n    console.log(\"Nothing\");\n    return null;\n  }\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/DELL/Documents/Desktop/PROJECTS/counter/src/App.js"],"names":["React","useState","Board","arr","setarr","Array","fill","winner","setwinner","renderSquare","i","handleClick","index","squares","calculateWinner","num","Math","floor","random","console","log","lines","length","a","b","c","x"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Board() {\n   const [arr, setarr] = useState(Array(9).fill(null));\n   const [winner, setwinner] = useState(\"\");\n\n   //  Each individual square\n   const renderSquare = (i) => (\n      <button className='square' onClick={() => handleClick(i)} value={arr[i]}>\n         {arr[i]}\n      </button>\n   );\n\n   const handleClick = (index) => {\n      if (arr[index]) return;\n      const squares = [...arr];\n      squares[index] = \"X\";\n      setarr(squares);\n\n      calculateWinner(arr);\n\n      //Computer is choosing a number\n      let num;\n      do {\n         num = Math.floor(Math.random() * 9);\n         console.log(\" NUM IS \", num);\n      } while (arr[num] && num != index);\n      console.log(\"number choosen by user is\", index);\n      console.log(\"number choosen by comp is\", num);\n      squares[num] = \"O\";\n      console.log(arr);\n      setarr(squares);\n   };\n\n   return (\n      <div>\n         <h1>Tic Tac Toe</h1>\n         <small>User vs computer</small>\n\n         <div className='board-row'>\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n         </div>\n         <div className='board-row'>\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n         </div>\n         <div className='board-row'>\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n         </div>\n\n         <h4 className='winner'>{winner}</h4>\n      </div>\n   );\n\n   function calculateWinner(arr) {\n      const lines = [\n         [0, 1, 2],\n         [3, 4, 5],\n         [6, 7, 8],\n         [0, 3, 6],\n         [1, 4, 7],\n         [2, 5, 8],\n         [0, 4, 8],\n         [2, 4, 6],\n      ];\n      for (let i = 0; i < lines.length; i++) {\n         const [a, b, c] = lines[i];\n         if (arr[a] && arr[a] === arr[b] && arr[a] === arr[c]) {\n            let x = `The winner is ${arr[a]}`;\n            setwinner(x);\n            console.log(x);\n            return arr[a];\n         }\n      }\n      console.log(\"Nothing\");\n      return null;\n   }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}